<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"
       default-lazy-init="false">

    <!-- 创建一个流程引擎的配置对象 -->
    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <!--数据库配置-->
        <property name="dataSource" ref="dataSource"/>
        <!--数据库事务管理器-->
        <property name="transactionManager" ref="transactionManager"/>
        <!-- 设置数据库schema的更新方式 -->
        <property name="databaseSchemaUpdate" value="${activiti.databaseSchemaUpdate}"/>
        <!-- 是否启动jobExecutor -->
        <property name="jobExecutorActivate" value="${activiti.jobExecutorActivate}"/>
        <!--流程引擎关闭启动事件监听-->
        <property name="processEngineLifecycleListener">
            <bean class="org.cleverframe.activiti.workflow.listener.CustomProcessEngineLifecycleListener"/>
        </property>
        <!--设置生成流程图字体，支持中文-->
        <property name="labelFontName" value="${activiti.labelFontName}"/>
        <property name="activityFontName" value="${activiti.activityFontName}"/>
        <!--定义部署的流程文件地址，不会重复部署-->
        <property name="deploymentResources" value="classpath*:/workflow/**"/>

        <!--邮件配置-->
        <!--<property name="mailServerHost" value="mail.my-corp.com"/>-->
        <!--<property name="mailServerPort" value="5025"/>-->

        <!-- 自定义表单字段类型 -->
        <!--<property name="customFormTypes">-->
        <!--<list>-->
        <!--<bean class="me.kafeitu.demo.activiti.activiti.form.UsersFormType" />-->
        <!--</list>-->
        <!--</property>-->

        <!--自定义“用户、用户组”-->
        <!--<property name="customSessionFactories">-->
            <!--<list>-->
                <!--<bean class="tk.hecks.workflow.CustomGroupManagerFactory">-->
                    <!--<property name="groupEntityManager">-->
                        <!--<bean class="tk.hecks.workflow.CustomGroupManager"></bean>-->
                    <!--</property>-->
                <!--</bean>-->
                <!--<bean class="tk.hecks.workflow.CustomUserManagerFactory">-->
                    <!--<property name="userEntityManager">-->
                        <!--<bean class="tk.hecks.workflow.CustomUserManager"></bean>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</list>-->
        <!--</property>-->

        <!--流程引擎 流程变量(Spring Bean)-->
        <property name="beans">
            <map>
                <entry key="key01" value="value01"/>
            </map>
        </property>
    </bean>

    <!-- 创建一个流程引擎bean -->
    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean" destroy-method="destroy">
        <property name="processEngineConfiguration" ref="processEngineConfiguration"/>
    </bean>

    <!-- 工作流仓储服务 -->
    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
    <!-- 工作流运行服务 -->
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
    <!--  工作流任务服务-->
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
    <!--  工作流历史数据服务-->
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
    <!--  工作流管理服务-->
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>
    <!-- 工作流唯一服务 -->
    <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService"/>
    <!--表单服务-->
    <bean id="formService" factory-bean="processEngine" factory-method="getFormService"/>
    <!--动态流程服务-->
    <bean id="dynamicBpmnService" factory-bean="processEngine" factory-method="getDynamicBpmnService"/>

    <!-- 集成 Activiti Rest 服务需要的bean -->
    <bean id="restResponseFactory" class="org.activiti.rest.service.api.RestResponseFactory"/>
    <bean id="contentTypeResolver" class="org.activiti.rest.common.application.DefaultContentTypeResolver"/>
    <!-- Bean与json之间相互转换Mapper -->
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
    <!-- 引擎内部提供的UUID生成器，依赖fastxml的java-uuid-generator模块 -->
    <!--<bean id="uuidGenerator" class="org.activiti.engine.impl.persistence.StrongUuidGenerator" />-->
</beans>